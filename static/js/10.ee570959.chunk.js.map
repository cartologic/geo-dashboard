{"version":3,"sources":["assets/img/others/default-dashboard.png","components/Dashboard/Dashboard.js","views/Dashboards/Dashboards.js"],"names":["module","exports","__webpack_require__","p","Dashboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","dashboardObject","id","date_created","react_default","a","createElement","reactstrap_es","xs","sm","md","key","href","className","src","DefaultDashboardLogo","alt","dist_default","interval","format","date","Component","Dashboards","setNewDashboardTitle","event","setState","newDashboardTitle","target","value","createNewDashboard","dashboard","axios","post","then","result","console","log","handleIncomingDataFromAPI","APIResult","pageNumber","arguments","length","undefined","displayed_pagination","_loop","i","push","onClick","handlePageTransition","active","tag","Math","ceil","data","count","dashboardList","results","dashboardAPI","total_count","next_url","next","previous_url","previous","pages_count","get","getDisplayedPagination","NewDashboardModal","toggleNewDashboardModal","bind","assertThisInitialized","map","components_Dashboard_Dashboard","color","isOpen","toggle","action","method","row","htmlFor","onChange","type","name","placeholder","disabled"],"mappings":"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","file":"static/js/10.ee570959.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-dashboard.c772de00.png\";","import React, {Component} from 'react';\r\nimport DefaultDashboardLogo from \"../../assets/img/others/default-dashboard.png\";\r\nimport {Col, CardBody, CardHeader, Card, CardFooter} from \"reactstrap\";\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.dashboardObject.title,\r\n            id: this.props.dashboardObject.id,\r\n            date_created: this.props.dashboardObject.date_created\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col xs=\"12\" sm=\"3\" md=\"3\" key={this.state.id} id={this.state.id}>\r\n                <Card>\r\n                    <CardHeader>\r\n                        <a href={\"#/dashboards/\"+this.state.id}>{this.state.title}</a>\r\n                        <div className=\"card-header-actions\">\r\n                            <button className=\"card-header-action btn btn-setting\"><i className=\"icon-settings\"></i></button>\r\n                            <button className=\"card-header-action btn btn-close\"><i className=\"icon-close\"></i></button>\r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody><img className=\"card-img-bottom\" src={DefaultDashboardLogo}\r\n                                   alt=\"Default Dashboard\"/></CardBody>\r\n                    <CardFooter>\r\n                        Created - <Moment interval={0} format=\"DD MMM YYYY - hh:mm a\" date={this.state.date_created}/>\r\n                    </CardFooter>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Col,\r\n    Form,\r\n    FormGroup, Input, Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    Row,\r\n} from 'reactstrap';\r\n\r\n\r\nimport Dashboard from \"../../components/Dashboard/Dashboard\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass Dashboards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            NewDashboardModal: false,\r\n            newDashboardTitle: '',\r\n            dashboardList: [],\r\n            dashboardAPI: {\r\n                total_count: 0,\r\n                next_url: '',\r\n                previous_url: '',\r\n                pages_count: 0,\r\n                displayed_pagination: [],\r\n            },\r\n        };\r\n\r\n        this.toggleNewDashboardModal = this.toggleNewDashboardModal.bind(this);\r\n    }\r\n\r\n\r\n    toggleNewDashboardModal() {\r\n        this.setState({\r\n            NewDashboardModal: !this.state.NewDashboardModal,\r\n        });\r\n    }\r\n\r\n    setNewDashboardTitle = (event) => {\r\n        this.setState({\r\n            newDashboardTitle: event.target.value\r\n        });\r\n    }\r\n\r\n    createNewDashboard = () => {\r\n        const dashboard = {\r\n            title: this.state.newDashboardTitle\r\n        }\r\n        axios.post('http://127.0.0.1:8000/api/dashboards/create/', dashboard)\r\n            .then(result => {\r\n                console.log(result)\r\n            })\r\n    }\r\n\r\n    handleIncomingDataFromAPI = (APIResult, pageNumber = 1) => {\r\n        let displayed_pagination = [];\r\n        for (let i = 0; i < Math.ceil(APIResult.data.count / 8); i++) {\r\n            displayed_pagination.push(\r\n                <PaginationItem key={i + 1} onClick={() => this.handlePageTransition(i + 1)}\r\n                                active={i + 1 === pageNumber ? true : false}>\r\n                    <PaginationLink tag=\"button\">\r\n                        {i + 1}\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n            )\r\n        }\r\n        this.setState({\r\n            dashboardList: APIResult.data.results,\r\n            dashboardAPI: {\r\n                total_count: APIResult.data.count,\r\n                next_url: APIResult.data.next,\r\n                previous_url: APIResult.data.previous,\r\n                pages_count: Math.ceil(APIResult.data.count / 8),\r\n                displayed_pagination: displayed_pagination,\r\n            }\r\n        });\r\n    }\r\n\r\n    handlePageTransition = (pageNumber) => {\r\n        axios.get(`http://127.0.0.1:8000/api/dashboards/?page=` + pageNumber)\r\n            .then(APIResult => {\r\n                this.handleIncomingDataFromAPI(APIResult, pageNumber);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handlePageTransition(1)\r\n    }\r\n\r\n    getDisplayedPagination = () => {\r\n        return(\r\n            <Pagination>\r\n                {this.state.dashboardAPI.displayed_pagination}\r\n            </Pagination>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        const dashboardList = this.state.dashboardList.map((dashboard, i) => <Dashboard key={dashboard.id} dashboardObject={dashboard}/>);\r\n\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonGroup className=\"mr-2\">\r\n                            <Button color=\"primary\" onClick={this.toggleNewDashboardModal}>New Dashboard</Button>\r\n                            <Modal isOpen={this.state.NewDashboardModal} toggle={this.toggleNewDashboardModal}\r\n                                   className={'modal-primary'}>\r\n                                <ModalHeader toggle={this.toggleNewDashboardModal}>Modal title</ModalHeader>\r\n                                <ModalBody>\r\n                                    <Form action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                                        <FormGroup row>\r\n                                            <Col md=\"2\"><Label htmlFor=\"dashboard-title\">Title</Label></Col>\r\n                                            <Col xs=\"12\" md=\"10\">\r\n                                                <Input onChange={this.setNewDashboardTitle} type=\"text\" id=\"dashboard-title\" name=\"dashboard-title\" placeholder=\"Please enter title for dashboard\"/>\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"primary\" onClick={this.createNewDashboard}>Create</Button>{' '}\r\n                                    <Button color=\"secondary\" onClick={this.toggleNewDashboardModal}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup className=\"mr-2\">\r\n                            <Button disabled color=\"success\">Import</Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"top-buffer\">\r\n                    {dashboardList}\r\n                </Row>\r\n                <Row className=\"top-buffer\">\r\n                    {this.getDisplayedPagination()}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboards;\r\n"],"sourceRoot":""}