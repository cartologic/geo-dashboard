{"version":3,"sources":["assets/img/others/default-dashboard.png","components/Dashboard/Dashboard.js","views/Dashboards/Dashboards.js","store/actions/Dashboards.js"],"names":["module","exports","__webpack_require__","p","Dashboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","dashboardObject","id","date_created","react_default","a","createElement","reactstrap_es","xs","sm","md","key","isOpen","deleteDashboardModalOpen","toggle","onDeleteDashboard","className","color","onClick","href","src","DefaultDashboardLogo","alt","dist_default","interval","format","date","Component","connect","dashboardsReducer","Dashboards","setNewDashboardTitle","event","setState","newDashboardTitle","target","value","loadSavedDashboards","_this2","dashboardList","map","dashboard","index","components_Dashboard_Dashboard","continueDeleteDashboard","onToggleNewDashboardModal","newDashboardModalOpen","action","method","row","htmlFor","onChange","type","name","placeholder","disabled","onDashboardCreate","dispatch","actionTypes","actions","dashboardID"],"mappings":"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","file":"static/js/10.1450e2b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-dashboard.c772de00.png\";","import React, {Component} from 'react';\r\nimport DefaultDashboardLogo from \"../../assets/img/others/default-dashboard.png\";\r\nimport {\r\n    Col,\r\n    CardBody,\r\n    CardHeader,\r\n    Card,\r\n    CardFooter,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button\r\n} from \"reactstrap\";\r\nimport Moment from 'react-moment';\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.dashboardObject.title,\r\n            id: this.props.dashboardObject.id,\r\n            date_created: this.props.dashboardObject.date_created,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col xs=\"12\" sm=\"3\" md=\"3\" key={this.state.id} id={this.state.id}>\r\n                <Modal isOpen={this.props.deleteDashboardModalOpen} toggle={this.props.onDeleteDashboard}\r\n                       className={'modal-danger'}>\r\n                    <ModalHeader toggle={this.props.onDeleteDashboard}>Delete Dashboard {this.state.title} ?</ModalHeader>\r\n                    <ModalBody>\r\n                        This action can not be undone!\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"danger\">Delete</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.props.onDeleteDashboard}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Card>\r\n                    <CardHeader>\r\n                        <a href={\"#/dashboards/\"+this.state.id}>{this.state.title}</a>\r\n                        <div className=\"card-header-actions\">\r\n                            <button className=\"card-header-action btn btn-setting\"><i className=\"icon-settings\"></i></button>\r\n                            <button onClick={this.props.onDeleteDashboard} className=\"card-header-action btn btn-close\"><i className=\"icon-close\"></i></button>\r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody><img className=\"card-img-bottom\" src={DefaultDashboardLogo}\r\n                                   alt=\"Default Dashboard\"/></CardBody>\r\n                    <CardFooter>\r\n                        Created - <Moment interval={0} format=\"DD MMM YYYY - hh:mm a\" date={this.state.date_created}/>\r\n                    </CardFooter>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        deleteDashboardModalOpen: state.dashboardsReducer.deleteDashboardModalOpen,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Col,\r\n    Form,\r\n    FormGroup, Input, Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    Row,\r\n} from 'reactstrap';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from \"react-redux\";\r\nimport Dashboard from \"../../components/Dashboard/Dashboard\";\r\n\r\n\r\nclass Dashboards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newDashboardTitle: '',\r\n        };\r\n    }\r\n\r\n    setNewDashboardTitle = (event) => {\r\n        this.setState({\r\n            newDashboardTitle: event.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadSavedDashboards();\r\n    }\r\n\r\n\r\n    render() {\r\n        const dashboardList = this.props.dashboardList.map(\r\n            (dashboard, index) =>\r\n                <Dashboard key={dashboard.id} dashboardObject={dashboard}\r\n                           onDeleteDashboard={this.props.onDeleteDashboard}\r\n                           continueDeleteDashboard={this.props.continueDeleteDashboard}/>\r\n        );\r\n\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                <Row>\r\n                    <Col>\r\n                        <ButtonGroup className=\"mr-2\">\r\n                            <Button color=\"primary\" onClick={this.props.onToggleNewDashboardModal}>New Dashboard</Button>\r\n                            <Modal isOpen={this.props.newDashboardModalOpen} toggle={this.props.onToggleNewDashboardModal}\r\n                                   className={'modal-primary'}>\r\n                                <ModalHeader toggle={this.props.onToggleNewDashboardModal}>Create Dashboard</ModalHeader>\r\n                                <ModalBody>\r\n                                    <Form action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                                        <FormGroup row>\r\n                                            <Col md=\"2\"><Label htmlFor=\"dashboard-title\">Title</Label></Col>\r\n                                            <Col xs=\"12\" md=\"10\">\r\n                                                <Input onChange={this.setNewDashboardTitle} type=\"text\" id=\"dashboard-title\" name=\"dashboard-title\" placeholder=\"Please enter title for dashboard\"/>\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                    </Form>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button disabled={this.state.newDashboardTitle ? false : true} color=\"primary\" onClick={() => this.props.onDashboardCreate(this.state.newDashboardTitle)}>Create</Button>{' '}\r\n                                    <Button color=\"secondary\" onClick={this.props.onToggleNewDashboardModal}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup className=\"mr-2\">\r\n                            <Button disabled color=\"success\">Import</Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"top-buffer\">\r\n                    {dashboardList}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        newDashboardModalOpen: state.dashboardsReducer.newDashboardModalOpen,\r\n        dashboardList: state.dashboardsReducer.dashboardList,\r\n        deleteDashboardModalOpen: state.dashboardsReducer.deleteDashboardModalOpen,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDashboardCreate: (newDashboardTitle) => dispatch(actions.createDashboard(newDashboardTitle)),\r\n        onToggleNewDashboardModal: () => dispatch(actions.toggleNewDashboardModal()),\r\n        loadSavedDashboards: () => dispatch(actions.loadSavedDashboards()),\r\n        onDeleteDashboard: () => dispatch(actions.deleteDashboard()),\r\n        continueDeleteDashboard: (dashboardID) => dispatch(actions.continueDeleteDashboard(dashboardID)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboards);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const createDashboard = (newDashboardTitle) => {\r\n    return {\r\n        type: actionTypes.CREATE_DASHBOARD,\r\n        newDashboardTitle: newDashboardTitle\r\n    };\r\n};\r\n\r\nexport const toggleNewDashboardModal = () => {\r\n    return {\r\n        type: actionTypes.TOGGLENEWDASHBOARDMODAL\r\n    };\r\n};\r\n\r\nexport const loadSavedDashboards = () => {\r\n    return {\r\n        type: actionTypes.LOADSAVEDDASHBOARDS\r\n    };\r\n};\r\n\r\nexport const deleteDashboard = () => {\r\n    return {\r\n        type: actionTypes.DELETEDASHBOARD\r\n    };\r\n};\r\n\r\nexport const continueDeleteDashboard = (dashboardID) => {\r\n    return {\r\n        type: actionTypes.CONTINUEDELETEDASHBOARD,\r\n        dashboardID: dashboardID\r\n    };\r\n};\r\n"],"sourceRoot":""}