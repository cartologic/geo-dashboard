{"version":3,"sources":["assets/img/others/default-dashboard.png","components/Dashboard/Dashboard.js","views/Dashboards/Dashboards.js","store/actions/Dashboards.js"],"names":["module","exports","__webpack_require__","p","Dashboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","dashboardObject","id","date_created","react_default","a","createElement","reactstrap_es","xs","sm","md","key","href","className","src","DefaultDashboardLogo","alt","dist_default","interval","format","date","Component","Dashboards","setNewDashboardTitle","event","setState","newDashboardTitle","target","value","loadSavedDashboards","_this2","dashboardList","map","dashboard","index","components_Dashboard_Dashboard","color","onClick","onToggleNewDashboardModal","isOpen","newDashboardModalOpen","toggle","action","method","row","htmlFor","onChange","type","name","placeholder","disabled","onDashboardCreate","connect","dashboardsReducer","dispatch","actionTypes","actions"],"mappings":"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","file":"static/js/10.01f30470.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-dashboard.c772de00.png\";","import React, {Component} from 'react';\nimport DefaultDashboardLogo from \"../../assets/img/others/default-dashboard.png\";\nimport {Col, CardBody, CardHeader, Card, CardFooter} from \"reactstrap\";\nimport Moment from 'react-moment';\n\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: this.props.dashboardObject.title,\n            id: this.props.dashboardObject.id,\n            date_created: this.props.dashboardObject.date_created,\n        };\n    }\n\n    render() {\n        return (\n            <Col xs=\"12\" sm=\"3\" md=\"3\" key={this.state.id} id={this.state.id}>\n                <Card>\n                    <CardHeader>\n                        <a href={\"#/dashboards/\"+this.state.id}>{this.state.title}</a>\n                        <div className=\"card-header-actions\">\n                            <button className=\"card-header-action btn btn-setting\"><i className=\"icon-settings\"></i></button>\n                            <button className=\"card-header-action btn btn-close\"><i className=\"icon-close\"></i></button>\n                        </div>\n                    </CardHeader>\n                    <CardBody><img className=\"card-img-bottom\" src={DefaultDashboardLogo}\n                                   alt=\"Default Dashboard\"/></CardBody>\n                    <CardFooter>\n                        Created - <Moment interval={0} format=\"DD MMM YYYY - hh:mm a\" date={this.state.date_created}/>\n                    </CardFooter>\n                </Card>\n            </Col>\n        )\n    }\n}\n\nexport default Dashboard;\n","import React, {Component} from 'react';\nimport {\n    Button,\n    ButtonGroup,\n    Col,\n    Form,\n    FormGroup, Input, Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Row,\n} from 'reactstrap';\nimport * as actions from '../../store/actions/index';\nimport {connect} from \"react-redux\";\nimport Dashboard from \"../../components/Dashboard/Dashboard\";\n\n\nclass Dashboards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newDashboardTitle: '',\n        };\n    }\n\n    setNewDashboardTitle = (event) => {\n        this.setState({\n            newDashboardTitle: event.target.value\n        });\n    }\n\n    componentDidMount() {\n        this.props.loadSavedDashboards();\n    }\n\n\n    render() {\n        const dashboardList = this.props.dashboardList.map((dashboard, index) => <Dashboard key={index} dashboardObject={dashboard}/>);\n\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col>\n                        <ButtonGroup className=\"mr-2\">\n                            <Button color=\"primary\" onClick={this.props.onToggleNewDashboardModal}>New Dashboard</Button>\n                            <Modal isOpen={this.props.newDashboardModalOpen} toggle={this.props.onToggleNewDashboardModal}\n                                   className={'modal-primary'}>\n                                <ModalHeader toggle={this.props.onToggleNewDashboardModal}>Modal title</ModalHeader>\n                                <ModalBody>\n                                    <Form action=\"\" method=\"post\" className=\"form-horizontal\">\n                                        <FormGroup row>\n                                            <Col md=\"2\"><Label htmlFor=\"dashboard-title\">Title</Label></Col>\n                                            <Col xs=\"12\" md=\"10\">\n                                                <Input onChange={this.setNewDashboardTitle} type=\"text\" id=\"dashboard-title\" name=\"dashboard-title\" placeholder=\"Please enter title for dashboard\"/>\n                                            </Col>\n                                        </FormGroup>\n                                    </Form>\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button disabled={this.state.newDashboardTitle ? false : true} color=\"primary\" onClick={() => this.props.onDashboardCreate(this.state.newDashboardTitle)}>Create</Button>{' '}\n                                    <Button color=\"secondary\" onClick={this.props.onToggleNewDashboardModal}>Cancel</Button>\n                                </ModalFooter>\n                            </Modal>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"mr-2\">\n                            <Button disabled color=\"success\">Import</Button>\n                        </ButtonGroup>\n                    </Col>\n                </Row>\n                <Row className=\"top-buffer\">\n                    {dashboardList}\n                </Row>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        newDashboardModalOpen: state.dashboardsReducer.newDashboardModalOpen,\n        dashboardList: state.dashboardsReducer.dashboardList,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDashboardCreate: (newDashboardTitle) => dispatch(actions.createDashboard(newDashboardTitle)),\n        onToggleNewDashboardModal: () => dispatch(actions.toggleNewDashboardModal()),\n        loadSavedDashboards: () => dispatch(actions.loadSavedDashboards()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboards);\n","import * as actionTypes from './actionTypes';\n\nexport const createDashboard = (newDashboardTitle) => {\n    return {\n        type: actionTypes.CREATE_DASHBOARD,\n        newDashboardTitle: newDashboardTitle\n    };\n};\n\nexport const toggleNewDashboardModal = () => {\n    return {\n        type: actionTypes.TOGGLENEWDASHBOARDMODAL\n    };\n};\n\nexport const loadSavedDashboards = () => {\n    return {\n        type: actionTypes.LOADSAVEDDASHBOARDS\n    };\n};\n"],"sourceRoot":""}